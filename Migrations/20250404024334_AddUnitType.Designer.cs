// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using W9_assignment_template.Data;

#nullable disable

namespace w9_assignment_ksteph.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20250404024334_AddUnitType")]
    partial class AddUnitType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("w9_assignment_ksteph.Models.Combat.Stat", b =>
                {
                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Luck")
                        .HasColumnType("int");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("MaxHitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Movement")
                        .HasColumnType("int");

                    b.Property<int>("Resistance")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("UnitId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Dungeons.Dungeon", b =>
                {
                    b.Property<int>("DungeonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DungeonId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartingRoomRoomId")
                        .HasColumnType("int");

                    b.HasKey("DungeonId");

                    b.HasIndex("StartingRoomRoomId");

                    b.ToTable("Dungeons");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Inventories.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");

                    b.HasAnnotation("Relational:JsonPropertyName", "Inventory");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Items.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("InventoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Rooms.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Abstracts.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentRoomRoomId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId1")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("UnitId");

                    b.HasIndex("CurrentRoomRoomId");

                    b.HasIndex("InventoryId1");

                    b.ToTable("Units");

                    b.HasDiscriminator<string>("UnitType").HasValue("Unit");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Characters.Cleric", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Cleric");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Characters.Fighter", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Fighter");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Characters.Knight", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Knight");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Characters.Rogue", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Rogue");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Characters.Wizard", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("Wizard");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Monsters.EnemyArcher", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyArcher");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Monsters.EnemyCleric", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyCleric");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Monsters.EnemyGhost", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyGhost");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Monsters.EnemyGoblin", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyGoblin");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Monsters.EnemyMage", b =>
                {
                    b.HasBaseType("w9_assignment_ksteph.Models.Units.Abstracts.Unit");

                    b.HasDiscriminator().HasValue("EnemyMage");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Combat.Stat", b =>
                {
                    b.HasOne("w9_assignment_ksteph.Models.Units.Abstracts.Unit", "Unit")
                        .WithOne("Stat")
                        .HasForeignKey("w9_assignment_ksteph.Models.Combat.Stat", "UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Dungeons.Dungeon", b =>
                {
                    b.HasOne("w9_assignment_ksteph.Models.Rooms.Room", "StartingRoom")
                        .WithMany()
                        .HasForeignKey("StartingRoomRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StartingRoom");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Items.Item", b =>
                {
                    b.HasOne("w9_assignment_ksteph.Models.Inventories.Inventory", "Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Abstracts.Unit", b =>
                {
                    b.HasOne("w9_assignment_ksteph.Models.Rooms.Room", "CurrentRoom")
                        .WithMany("Units")
                        .HasForeignKey("CurrentRoomRoomId");

                    b.HasOne("w9_assignment_ksteph.Models.Inventories.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentRoom");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Inventories.Inventory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Rooms.Room", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("w9_assignment_ksteph.Models.Units.Abstracts.Unit", b =>
                {
                    b.Navigation("Stat")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
